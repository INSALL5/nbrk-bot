import pandas as pd
import requests
from datetime import datetime
from dotenv import load_dotenv
import os
import logging

# –£–¥–∞–ª–µ–Ω–∏–µ –ª–æ–≥–∞, –µ—Å–ª–∏ –±–æ–ª—å—à–µ 1 –ú–ë
if os.path.exists("log.txt") and os.path.getsize("log.txt") > 1_000_000:
    os.remove("log.txt")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    filename="log.txt",
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s"
)

load_dotenv()
TOKEN = os.getenv("TOKEN")
CHAT_ID = os.getenv("CHAT_ID")

today = datetime.today().strftime("%d.%m.%Y")
url = f"https://nationalbank.kz/rss/get_rates.cfm?fdate={today}"

try:
    response = requests.get(url)
    response.raise_for_status()
    df = pd.read_xml(response.content)

    if df.empty:
        logging.warning("‚ö†Ô∏è DataFrame –ø—É—Å—Ç–æ–π. –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ —Å XML.")
    else:
        file_name = f"–∫—É—Ä—Å—ã_–≤–∞–ª—é—Ç_–ù–ë–†–ö_{today.replace('.', '-')}.xlsx"
        df.to_excel(file_name, index=False)
        logging.info(f"‚úÖ –§–∞–π–ª {file_name} —Å–æ—Ö—Ä–∞–Ω—ë–Ω.")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        requests.post(
            f"https://api.telegram.org/bot{TOKEN}/sendMessage",
            data={
                "chat_id": CHAT_ID,
                "text": f"üì• –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –Ω–∞ {today} –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è..."
            }
        )

        # –û—Ç–ø—Ä–∞–≤–∫–∞ Excel —Ñ–∞–π–ª–∞
        with open(file_name, "rb") as file:
            send_resp = requests.post(
                f"https://api.telegram.org/bot{TOKEN}/sendDocument",
                data={"chat_id": CHAT_ID},
                files={"document": file}
            )

        if send_resp.status_code == 200:
            logging.info("‚úÖ –§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram.")
        else:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {send_resp.status_code} - {send_resp.text}")

except Exception as e:
    logging.error(f"‚ÄºÔ∏è –û—à–∏–±–∫–∞: {e}")
    print("‚ÄºÔ∏è –û—à–∏–±–∫–∞ –≤ nbrk_rates.py:", e)
